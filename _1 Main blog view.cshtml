@using Connect.Koi;
<link rel="stylesheet" href="@App.Path/dist/@(Koi.PickCss("bs3,bs4", "bs3")).css" data-enableoptimizations="true" />
<script src="@App.Path/dist/scripts.js" data-enableoptimizations="bottom"></script>
<script src="@App.Path/dist/sticky-sidebar.min.js" data-enableoptimizations="bottom"></script>

@{
    // get all posts as delived from the standard query
    var currCategory = Request.QueryString["category"];
    var currTag = Request.QueryString["tag"];
    var currUrl = DotNetNuke.Entities.Tabs.TabController.CurrentPage.FullUrl;

    // get all posts as delived from the standard query
    var cats = (IEnumerable<dynamic>)AsDynamic(App.Data["Category"]);
    var cat = AsDynamic(Data["Category"]).FirstOrDefault(); // get category if, if a category is selected
    var postsToShow = (IEnumerable<dynamic>)AsDynamic(Data["Default"]).OrderByDescending(bp => bp.PublicationMoment);

    // only apply this filter for non-editors
    if (!Permissions.UserMayEditContent)
    {
        postsToShow = postsToShow.Where(p => p.PublicationMoment <= DateTime.Now);
    }

    var postAllCategories = postsToShow;
    var categoryNumbers = cats.Select(ca => new {
        Category = ca,
        Count = postAllCategories.Where(p => ((IEnumerable<dynamic>)p.Categories).Any(c => c.EntityId == ca.EntityId)).Count()
    });

    if (!String.IsNullOrEmpty(currCategory))
    {
        postsToShow = postsToShow.Where(p => ((IEnumerable<dynamic>)p.Categories).Any(c => c.Key == currCategory));
    }
}
<section class="app-blog sc-element">
    @* toolbar for add / manage posts *@
    @Edit.Toolbar(toolbar: new object[] { 
        new { 
            command = new { 
                action = "new", 
                contentType = "BlogPost"
            } 
        },
        new { 
            command = new { 
                action = "contentitems", 
                contentType = "BlogPost"
            },
            showCondition = true
        }
    }, settings: new { hover="left", show = "hover" })
    <div class="row">
        <!-- todo: 2tl - bitte kurz besprechen mit 2dm -->
		<div @Koi.Class(@"all='col-xs-12 col-sm-12 col-lg-8' bs3,unk='col-md-8' bs4='col-md-12 col-xl-8'")>
            @* optionaly show category header *@
            @if(cat != null) {
                <div class="category-header">
                    <h1>@App.Resources.Category @cat.Name</h1>
                    @Html.Raw(cat.Description)
                </div>
            }
             @* optionaly show tags header *@
            @if(Request.QueryString["tag"] != null) {
                var currentTag = AsDynamic(App.Data["Tag"]).Where(t => t.Tag == Request.QueryString["tag"]).FirstOrDefault();
                <div class="category-header">
                    <h1>@App.Resources.Filter @currentTag.Name</h1>
                </div>
            
            }
        </div>
    </div>
    <div class="row">

        
        <div @Koi.Class(@"all='' bs3,unk='col-xs-12 col-sm-12 col-md-8 col-lg-8' bs4='col-xs-12 col-sm-12 col-md-12 col-lg-8 col-xl-8'")>
            @* the posts *@
            @foreach(var post in postsToShow)
            {
                @RenderPage("_list-item.cshtml", new { Post = post })
            }
        
            @* Paging Bar *@
            @RenderPage("_pager.cshtml")
        </div>
        <div @Koi.Class(@"all='' bs3,unk='col-xs-12 col-sm-12 col-md-4 col-lg-4' bs4='col-xs-12 col-sm-12 col-md-12 col-lg-4 col-xl-4'")>
           
            <aside>
                <div id="sidebar"  @Koi.Class(@"all='sidebar app-blog-detail-right' bs3,unk='hidden-xs hidden-sm' bs4='d-none d-sm-none d-md-none d-lg-block'")>
                    <div class="sidebar__inner">
                        @RenderPage("_category_sidebar.cshtml")
                    </div>
                </div>
                @*only show on mobile view*@
					<div @Koi.Class(@"all='sidebar app-blog-detail-right' bs3,unk='visible-xs-block visible-sm-block hidden-md hidden-lg' bs4='d-lg-none d-xl-none'")>
						<div class="sidebar__inner">
							@RenderPage("_category_sidebar.cshtml")
						</div>
						
					</div>
            </aside>

        </div>
    </div>
</section>
@Koi.IfUnknown("<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css'>")

@functions{
    /// <summary>
    /// Populate the search - ensure that each entity has an own url/page
    /// </summary>
    /// <param name="searchInfos"></param>
    /// <param name="moduleInfo"></param>
    /// <param name="startDate"></param>
    public override void CustomizeSearch(Dictionary<string, List<ToSic.SexyContent.Search.ISearchInfo>> searchInfos, DotNetNuke.Entities.Modules.ModuleInfo moduleInfo, DateTime startDate)
    {
         foreach (var si in searchInfos["SearchIndex"])
		{
			si.QueryString = "post=" + AsDynamic(si.Entity).UrlKey;
		}
    }
}