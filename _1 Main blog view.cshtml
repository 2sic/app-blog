<link rel="stylesheet" data-enableoptimizations="true" href="@App.Path/assets/style.css" />
@* this will show an "add" button if the current user is an editor *@
<div class="sc-element">
	@Edit.Toolbar(toolbar: new object[] { 
	new { command = new { 
			action = "new", 
			contentType = "BlogPost"
			} 
			},
		new { showCondition = true,
			command = new { 
				action = "contentitems", 
				contentType = "BlogPost"
			} 
		}
	
	}, settings: new { hover="left", show = "hover" })

@{
    // get all posts as delived from the standard query
	var postsToShow = AsDynamic(Data["Default"]);
	
	// only apply this filter for non-editors
	if (!Permissions.UserMayEditContent) {
		postsToShow = postsToShow.Where(p => p.PublicationMoment <= DateTime.Now);
	}
}

<div class="app-blog">
	@* the posts *@
	@foreach(var post in postsToShow)
	{
		@RenderPage("_list-item.cshtml", new { Post = post })
	}

	@* Paging Bar *@
	@RenderPage("_pager.cshtml")
</div>

</div>


@functions{
    /// <summary>
    /// Populate the search - ensure that each entity has an own url/page
    /// </summary>
    /// <param name="searchInfos"></param>
    /// <param name="moduleInfo"></param>
    /// <param name="startDate"></param>
    public override void CustomizeSearch(Dictionary<string, List<ToSic.SexyContent.Search.ISearchInfo>> searchInfos, DotNetNuke.Entities.Modules.ModuleInfo moduleInfo, DateTime startDate)
    {
         foreach (var si in searchInfos["SearchIndex"])
		{
			si.QueryString = "post=" + AsDynamic(si.Entity).UrlKey;
		}
    }
}