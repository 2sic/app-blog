// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "AppResources.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class AppResources
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpDataModelsGenerator v17.06.02
// App/Edition: Blog/
// User:        2sic Web-Developer
// When:        2024-04-09 09:26:12Z
namespace AppCode.Data
{
  // This is a generated class for AppResources (scope: System.App)
  // To extend/modify it, see instructions above.

  /// <summary>
  /// AppResources data. <br/>
  /// Generated 2024-04-09 09:26:12Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.BackToHome`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  /// <remarks>
  /// This Content-Type is NOT in the default scope, so you may not see it in the Admin UI. It's in the scope System.App.
  /// </remarks>
  public partial class AppResources: AutoGenerated.ZagAppResources
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for System.App.AppResources in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZagAppResources: Custom.Data.CustomItem
  {
    /// <summary>
    /// BackToHome as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("BackToHome", scrubHtml: true) etc.
    /// </summary>
    public string BackToHome => _item.String("BackToHome", fallback: "");

    /// <summary>
    /// BlogTitle as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("BlogTitle", scrubHtml: true) etc.
    /// </summary>
    public string BlogTitle => _item.String("BlogTitle", fallback: "");

    /// <summary>
    /// Categories as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Categories", scrubHtml: true) etc.
    /// </summary>
    public string Categories => _item.String("Categories", fallback: "");

    /// <summary>
    /// Category as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Category", scrubHtml: true) etc.
    /// </summary>
    public string Category => _item.String("Category", fallback: "");

    /// <summary>
    /// Filter as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Filter", scrubHtml: true) etc.
    /// </summary>
    public string Filter => _item.String("Filter", fallback: "");

    /// <summary>
    /// LabelAdminDetailPageWarning as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAdminDetailPageWarning", scrubHtml: true) etc.
    /// </summary>
    public string LabelAdminDetailPageWarning => _item.String("LabelAdminDetailPageWarning", fallback: "");

    /// <summary>
    /// LabelAdminPostPublishInfo as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAdminPostPublishInfo", scrubHtml: true) etc.
    /// </summary>
    public string LabelAdminPostPublishInfo => _item.String("LabelAdminPostPublishInfo", fallback: "");

    /// <summary>
    /// LabelPostNotExists as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelPostNotExists", scrubHtml: true) etc.
    /// </summary>
    public string LabelPostNotExists => _item.String("LabelPostNotExists", fallback: "");

    /// <summary>
    /// LabelPostNotExistsText as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelPostNotExistsText", scrubHtml: true) etc.
    /// </summary>
    public string LabelPostNotExistsText => _item.String("LabelPostNotExistsText", fallback: "");

    /// <summary>
    /// NextPost as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("NextPost", scrubHtml: true) etc.
    /// </summary>
    public string NextPost => _item.String("NextPost", fallback: "");

    /// <summary>
    /// PageNext as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("PageNext", scrubHtml: true) etc.
    /// </summary>
    public string PageNext => _item.String("PageNext", fallback: "");

    /// <summary>
    /// PagePrevious as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("PagePrevious", scrubHtml: true) etc.
    /// </summary>
    public string PagePrevious => _item.String("PagePrevious", fallback: "");

    /// <summary>
    /// PostsBy as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("PostsBy", scrubHtml: true) etc.
    /// </summary>
    public string PostsBy => _item.String("PostsBy", fallback: "");

    /// <summary>
    /// PreviousPost as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("PreviousPost", scrubHtml: true) etc.
    /// </summary>
    public string PreviousPost => _item.String("PreviousPost", fallback: "");

    /// <summary>
    /// ReadMore as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("ReadMore", scrubHtml: true) etc.
    /// </summary>
    public string ReadMore => _item.String("ReadMore", fallback: "");

    /// <summary>
    /// ReadMoreAuthor as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("ReadMoreAuthor", scrubHtml: true) etc.
    /// </summary>
    public string ReadMoreAuthor => _item.String("ReadMoreAuthor", fallback: "");

    /// <summary>
    /// RssDescription as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("RssDescription", scrubHtml: true) etc.
    /// </summary>
    public string RssDescription => _item.String("RssDescription", fallback: "");

    /// <summary>
    /// ShowAll as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("ShowAll", scrubHtml: true) etc.
    /// </summary>
    public string ShowAll => _item.String("ShowAll", fallback: "");

    /// <summary>
    /// Tag as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Tag", scrubHtml: true) etc.
    /// </summary>
    public string Tag => _item.String("Tag", fallback: "");

    /// <summary>
    /// Tags as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Tags", scrubHtml: true) etc.
    /// </summary>
    public string Tags => _item.String("Tags", fallback: "");
  }
}