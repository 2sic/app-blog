@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Search;
@using ToSic.Eav.Run;

@RenderPage("shared/_Assets.cshtml")

@{
  var parts = CreateInstance("shared/_Parts.cshtml");
  @*
    Get all posts if user is admin and only publicated ones if visitor
    FIXME: As soon as Time Comparison is fixed in Query Desginer, outsource logic
  *@
  var posts = Edit.Enabled
    ? AsList(Data["Posts"])
    : AsList(Data["Posts"]).Where(p => p.PublicationMoment.CompareTo(DateTime.Now) <= 0);

  var viewConfiguration = Content;
  var filteredTag = AsList(Data["Tag"]).FirstOrDefault();
  var filteredAuthor = AsList(Data["Author"]).FirstOrDefault();
  var filteredCategory = AsList(Data["Category"]).FirstOrDefault();
}

@* Show Toolbar Menu if admin *@
@if(Edit.Enabled) {
  @parts.AdminToolbarMenu()
  @parts.DetailsPageConfigWarning()
}

<section class="app-blog">
  @parts.FilterInformationHeader(filteredCategory, filteredTag, filteredAuthor, viewConfiguration)

  @parts.ListPostsMultiCol(posts, filteredCategory, filteredTag, filteredAuthor)

  @* Show pagination if configured *@
  @if (viewConfiguration.ShowPagination) {
    var pages = AsList(Data["Paging"]).FirstOrDefault();
    @parts.Paging(pages, filteredCategory, filteredTag, filteredAuthor)
  }
</section>

@functions{
  /// <summary>
  /// Prevent duplicated search results.
  /// Since the main list will already add all the items to the search, this view should not add them again.
  /// </summary>
  public override void CustomizeSearch(Dictionary<string, List<ISearchItem>> searchInfos, IContainer moduleInfo, DateTime beginDate) {
    searchInfos.Clear();
  }
}
