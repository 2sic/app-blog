@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;

@*
  Displays a page navigation with numbered buttons for every page and previous/next buttons
*@

@{
  var pages = AsList(Data["Paging"]).FirstOrDefault();
  int pageNumber = (int)pages.PageNumber;
  var previousDisabled = pageNumber == 1 ? "disabled" : "";
  var nextDisabled = pageNumber == pages.PageCount ? "disabled" : "";
}

@if(pages.PageCount > 1) {
  <nav>
    <ul class="pagination justify-content-center">
      @* Show previous button *@
      <li class="page-item @previousDisabled">
        <a class="page-link" href='@Tags.SafeUrl(LinkToPageNumber(pageNumber - 1))'>
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>

      @* Show button for every page *@
      @for (int i = 1; i <= pages.PageCount; i++) {
        <li class='page-item @(i == pageNumber ? "active" : "")'>
          <a class="page-link" href='@Tags.SafeUrl(LinkToPageNumber(i))'>@i</a>
        </li>
      }

      @* Show next button *@
      <li class="page-item @nextDisabled">
        <a class="page-link" href='@Tags.SafeUrl(LinkToPageNumber(pageNumber + 1))'>
          <span aria-hidden="true">&raquo;</span>
        </a>
      </li>
    </ul>
  </nav>
}

@functions {
  /**
  * Generate a paging-link, preserving current category parameters
  */
  public string LinkToPageNumber(int pageNumber){
    var filteredTag = AsList(Data["Tag"]).FirstOrDefault();
    var filteredAuthor = AsList(Data["Author"]).FirstOrDefault();
    var filteredCategory = AsList(Data["Category"]).FirstOrDefault();

    var categoryParam = filteredCategory != null
      ? "category=" + filteredCategory.Key + "&"
      : "";
    var tagParam = filteredTag != null
      ? "tag=" + filteredTag.Tag + "&"
      : "";
    var authorParam = filteredAuthor != null
      ? "author=" + filteredAuthor.FullName + "&"
      : "";

    return Link.To(parameters: categoryParam + tagParam + authorParam + "page=" + pageNumber);
  }
}