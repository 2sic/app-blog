@inherits Custom.Hybrid.Razor12
@{
  // Pages come from the Query, in the "Paging" stream
  var pages = AsList(Data["Paging"]).FirstOrDefault();
  int pageNumber = (int)pages.PageNumber;
}
@if(pages.PageCount > 1) {
  <nav>
    <ul class="pagination justify-content-center">
      @* Show previous button *@
      <li class='page-item @(pageNumber == 1 ? "disabled" : "")'>
        <a class="page-link" href='@LinkToPage(pageNumber - 1)'>
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>

      @* Show button for every page *@
      @for (int i = 1; i <= pages.PageCount; i++) {
        <li class='page-item @(i == pageNumber ? "active" : "")'>
          <a class="page-link" href='@LinkToPage(i)'>@i</a>
        </li>
      }

      @* Show next button *@
      <li class='page-item @(pageNumber == pages.PageCount ? "disabled" : "")'>
        <a class="page-link" href='@LinkToPage(pageNumber + 1)'>
          <span aria-hidden="true">&raquo;</span>
        </a>
      </li>
    </ul>
  </nav>
}
@functions {
  
  // Generate a paging-link, preserving current filter parameters
  public dynamic LinkToPage(int pageNumber){
    var filteredTag = AsList(Data["Tag"]).FirstOrDefault();
    var filteredAuthor = AsList(Data["Author"]).FirstOrDefault();
    var filteredCategory = AsList(Data["Category"]).FirstOrDefault();

    var categoryParam = filteredCategory != null ? "category=" + filteredCategory.Key + "&" : "";
    var tagParam = filteredTag != null ? "tag=" + filteredTag.Tag + "&" : "";
    var authorParam = filteredAuthor != null ? "author=" + filteredAuthor.FullName + "&" : "";

    // return Tags.SafeUrl(Link.To(parameters: categoryParam + tagParam + authorParam + "page=" + pageNumber));
    return Link.To(parameters: categoryParam + tagParam + authorParam + "page=" + pageNumber);
  }
}