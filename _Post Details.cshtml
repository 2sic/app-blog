@using System.Web.UI.HtmlControls

<link rel="stylesheet" data-enableoptimizations="true" href="@App.Path/assets/style.css" />
<script src="@App.Path/assets/scripts.js"></script>
<script src="@App.Path/assets/sticky-sidebar.min.js"></script>
@using Connect.Koi;
@{	
	var lib = CreateInstance("_library.cshtml"); 

	var post = AsDynamic(Data["Default"]).First();
    var author = (post.Author.Count > 0) ? post.Author[0] : lib.unknownAuthor;
	var imgWidth = "800";
	var imgHeight = "400";
	var imgUrl = lib.GetSizedImgUrl(post.Image, imgHeight, imgWidth);

	// only add meta-tags if it's rendered as page - not when the search-index is accessing the template
	if (HttpContext.Current.Handler is Page)
	{
		lib.SetMetaAndTitle(post.MetaTitle, post.Title, post.MetaDescription, lib.StripHtml(post.Teaser));	

		var metaDesc = !String.IsNullOrEmpty(post.SharingDescription) ? post.SharingDescription : lib.StripHtml(post.Teaser);

		lib.SetOpenGraphHeaders( 
			post.Title, 
			App.Settings.Title, 
			Link.To(parameters: "post=" + post.UrlKey), 
			metaDesc, 
			imgUrl, 
			imgHeight,
			imgWidth
			);
	}

	 // get all posts as delived from the standard query
    var currCategory = Request.QueryString["category"];
    var currTag = Request.QueryString["tag"];
    var currUrl = DotNetNuke.Entities.Tabs.TabController.CurrentPage.FullUrl;

    // get all posts as delived from the standard query
    var cats = (IEnumerable<dynamic>)AsDynamic(App.Data["Category"]);

    var postsToShow = (IEnumerable<dynamic>)AsDynamic(Data["Default"]);

    // only apply this filter for non-editors
    if (!Permissions.UserMayEditContent)
    {
        postsToShow = postsToShow.Where(p => p.PublicationMoment <= DateTime.Now);
    }

    var postAllCategories = postsToShow;
    var categoryNumbers = cats.Select(ca => new {
        Category = ca,
        Count = postAllCategories.Where(p => ((IEnumerable<dynamic>)p.Categories).Any(c => c.EntityId == ca.EntityId)).Count()
    });
}
@if(post.IsPublished || Permissions.UserMayEditContent) {

	
<div class="container-fluid">
    <div class="ly-container-inner co-main-blog-container" >
		<div class="app-blog row ">
			

            <div class="col col-xs-12 col-md-8 sc-element">
                @Edit.Toolbar(post, actions: "edit")
				<div class="app-blog-detail">
				@if(!String.IsNullOrEmpty(post.Image)) {
						<img class="app-blog-image" src="@imgUrl" alt="" />
					}
					<div class="app-blog-detail-top">
						<div class="app-blog-person">
							<a href="@Link.To(parameters: "author=" + author.FullName)">
								<img src="@author.Image.ToLower()?w=50&amp;h=50&amp;mode=crop&amp;scale=both" alt="@author.FullName" />
							</a>
						</div>
						<h1>@post.Title</h1>
						 <div class="app-blog-categories">
							<time pubdate datetime='@post.PublicationMoment.ToString("d")'>@post.PublicationMoment.ToString("d") | </time>

							@{
									var categoryList = (post.Categories as IEnumerable<dynamic>)
										.Select(cat => "<a href='" + Link.To(parameters: "category=" + cat.Key) + "' title='" + cat.Name + "'>" + cat.Name + "</a>").ToArray(); 
							}
							@Html.Raw(string.Join("", categoryList))
                   		 </div>
					
						
					</div>

					

					
					<div class="app-blog-text">
						@ToSic.SexyContent.ContentBlocks.Render.All(post, field: "DesignedContent", merge: post.Body) 
					</div>

					@* show categories and tags *@
					@{
						 
						var tagsList = (post.Tags as IEnumerable<dynamic>)
							.Select(tag => "<a href='" + Link.To(parameters: "tag=" + tag.Tag) + "' title='" + tag.Name + "'>" + tag.Name + "</a>").ToArray(); 
					}
					
					<div class="app-blog-tags">
						<strong> @(post.Tags.Count > 1 ? App.Resources.Tags : App.Resources.Tag): </strong>
						@Html.Raw(string.Join(", ", tagsList))
					</div>
					<hr />
					@* render social sharing here - to update the link, change it in the App settings *@
					<script type="text/javascript" src="@App.Settings.SocialAddThisJS" ></script> 
					<div class="addthis_inline_share_toolbox hidden-md hidden-lg"></div>
					<hr class="hidden-md hidden-lg" />
					@* show the author *@
					<div class="app-blog-authordetails">
						<div>
							<img src='@author.Image.ToLower()?w=120&amp;h=120&amp;mode=crop&amp;quality=70' alt="@author.FullName"/> @Html.Raw(author.ShortBio)
						</div>
						<div>
						@App.Resources.ReadMore <a href="@Link.To(parameters: "author=" + author.FullName)">@author.FullName</a>
						</div>
					</div>
					<div class="app-blog-backlinks">
						<a class="app-blog-btn app-blog-back" href="@Link.To()" title="Home">@App.Resources.BackToHome</a>
					</div>
					<div id="disqus_thread"></div>
					<script>

					/**
					*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
					*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
					/*
					var disqus_config = function () {
					this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
					this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
					};
					*/
					(function() { // DON'T EDIT BELOW THIS LINE
					var d = document, s = d.createElement('script');
					s.src = 'https://2sic-com.disqus.com/embed.js';
					s.setAttribute('data-timestamp', +new Date());
					(d.head || d.body).appendChild(s);
					})();
					</script>
					<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
				</div>
			</div>
			
			<div class="col col-xs-12 col-md-4 hidden-sm hidden-xs">
				<div id="sidebar" class="sidebar app-blog-detail-right">
					<div class="sidebar__inner">
						@RenderPage("_category_sidebar.cshtml")
						@* render social sharing here - to update the link, change it in the App settings *@
						<script type="text/javascript" src="@App.Settings.SocialAddThisJS" ></script> 
						<div class="addthis_inline_share_toolbox"></div>
						@* show micro-previews for previous/next post *@
						@RenderPage("_Post micro preview.cshtml", new { post = AsDynamic(Data["Previous"]).FirstOrDefault(), css = "app-blog-previouslink", title = App.Resources.PreviousPost, leftIcon="glyphicon-arrow-left"})
						@RenderPage("_Post micro preview.cshtml", new { post = AsDynamic(Data["Next"]).FirstOrDefault(), css = "app-blog-nextlink", title = App.Resources.NextPost, rightIcon="glyphicon-arrow-right"})
						
					</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
} else {
	@* this happens when an article isn't published yet *@
	Response.StatusCode = 404;
	Response.TrySkipIisCustomErrors = true;
	<h1>404 (not found)</h1>
	<p>
		<a class="app-blog-btn app-blog-back" href="@Link.To()" title="Home">@App.Resources.BackToHome</a>
	</p>
}
