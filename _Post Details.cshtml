@using System.Web.UI.HtmlControls

<link rel="stylesheet" data-enableoptimizations="true" href="@App.Path/assets/style.css" />
@{	
	var lib = CreateInstance("_library.cshtml"); 

	var post = AsDynamic(Data["Default"]).First();
	var previousPost = AsDynamic(Data["Previous"]).FirstOrDefault();
	var nextPost = AsDynamic(Data["Next"]).FirstOrDefault();
    var author = (post.Author.Count > 0) ? post.Author[0] : lib.unknownAuthor;
	

	// only add meta-tags if it's rendered as page - not when the search-index is accessing the template
	if (HttpContext.Current.Handler is Page)
	{
		lib.SetMetaAndTitle(HttpContext.Current.Handler as Page, post);	
		lib.SetOpenGraphHeaders("article", post.Title, App.Settings.Title, @Link.To(parameters: "post=" + post.UrlKey), lib.StripHtml(post.Teaser, post.Sharingdescription) , lib.GetSizedImgUrl(post.Image, post.ImageSquare), post.ImageSquare);
	}
}
@Edit.Toolbar(post)
@if(post.IsPublished || Permissions.UserMayEditContent){
<div class="app-blog sc-element">
	@Edit.Toolbar(post, actions: "edit")	
	<div class="app-blog-detail"> <!-- Add class: app-blog-small -->
		<div class="app-blog-detail-top">
			<div class="app-blog-person">
				<a href="@Link.To(parameters: "author=" + author.FullName)">
					<img src="@author.Image.ToLower()?w=64&amp;h=65&amp;mode=crop&amp;scale=both" alt="@author.FullName" />
					<h4>@author.FullName</h4>
				</a>
			</div>
			<h1>@post.Title</h1>
			<time pubdate datetime="@post.PublicationMoment.ToString("d")">@post.PublicationMoment.ToString("d")</time>
		</div>
		@if(!String.IsNullOrEmpty(post.Image)){
			<img class="app-blog-image @(post.ImageSquare ? " pull-right" : "") " src="@post.Image" alt="" />
		}
		<div class="app-blog-text">
		    @ToSic.SexyContent.ContentBlocks.Render.All(post, field: "DesignedContent", merge: post.Body)
		</div>
	</div>

	<div class="app-blog-previouslink pull-left">
		@if(previousPost != null){
			<a href="@Link.To(parameters: "post=" + previousPost.UrlKey)" >Previous Article: @previousPost.Title</a>
		}
	</div>
	
	<div class="app-blog-nextlink pull-right">
		@if(nextPost != null){
			<a href="@Link.To(parameters: "post=" + nextPost.UrlKey)" >Next Article: @nextPost.Title</a>
		}
	</div>
	
	<div class="app-blog-tags">
		<hr />
		<h3>Tags</h3>
		<ul>
			@foreach(var tag in post.Tags) {
				<li class="app-blog-tag1"><a href="@Link.To(parameters: "tag=" + tag.Tag)" title="@tag.Name">@tag.Name</a></li>
			}
		</ul>
	</div>
	<hr />

	<div class="app-blog-authordetails">
		<div>
			<img style="float: right; margin-left: 5px; width: 200px; height: 200px; border: none;" src='@author.Image'/> @Html.Raw(author.ShortBio)
		</div>
		<div>
		Read more posts by <a href="@Link.To(parameters: "author=" + author.FullName)">@author.FullName</a>
		</div>
	</div>
	<div class="app-blog-backlinks">
		<a class="app-blog-btn app-blog-back" href="@Link.To()" title="Home">Back to blog home </a>
	</div>
</div>
} else {
	Response.StatusCode = 404;
	Response.TrySkipIisCustomErrors = true;
	<h1>404 (not found)</h1>
	<p>
		<a href="/">Back to frontpage</a>
	</p>
}
